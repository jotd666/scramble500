import re

# for the side scratch project: take asm tables and create x / y lists for ufos and bombs
ufo_path = """    dc.b  $FF,$00         ; XDelta = -1, YDelta = 0
    dc.b  $FE,$00         ; XDelta = -2, YDelta = 0
    dc.b  $FE,$00
    dc.b  $FE,$00,$FE,$00,$FE,$00,$FE,$00,$FE,$00,$FE,$00,$FE,$02,$FE,$00
    dc.b  $FE,$02,$FE,$00,$FE,$02,$FE,$02,$FE,$02,$FE,$02,$00,$02,$00,$02
    dc.b  $02,$02,$02,$02,$02,$02,$02,$02,$02,$02,$02,$02,$02,$00,$02,$02
    dc.b  $02,$00,$02,$02,$02,$00,$02,$02,$02,$00,$02,$00,$02,$00,$02,$00
    dc.b  $02,$00,$02,$02,$02,$00,$02,$00,$02,$00,$02,$02,$02,$00,$02,$00
    dc.b  $02,$00,$02,$00,$02,$02,$02,$00,$02,$02,$02,$00,$02,$00,$02,$02
    dc.b  $02,$02,$02,$02,$00,$02,$00,$02,$00,$02,$FE,$02,$FE,$02,$FE,$02
    dc.b  $FE,$02,$FE,$00,$FE,$02,$FE,$00,$FE,$02,$FE,$00,$FE,$02,$FE,$00
    dc.b  $FE,$02,$FE,$00,$FE,$00,$FE,$00,$FE,$00,$FE,$00,$FE,$00

"""

bomb_move_table = """
    dc.b  $00,$00         ; X delta = 0, Y delta = 0
    dc.b  $01,$00         ; X delta = 1, Y delta = 0
    dc.b  $00,$FF         ; X delta = 0, Y delta = -1 (remember, bytes are signed)
    ; .. you get the idea.. Now here's the rest of the deltas
    dc.b  $00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF
    dc.b  $00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF,$00,$FF
    dc.b  $00,$FF,$01,$FF,$00,$FF,$00,$FF,$00,$FF,$01,$FF,$00,$FF,$00,$FF
    dc.b  $01,$FF,$00,$FF,$01,$FF,$01,$FF,$00,$FF,$01,$FF,$01,$FF,$01,$FF
    dc.b  $01,$00,$01,$00,$01,$FF,$01,$FF,$01,$00,$01,$FF,$01,$00,$01,$FF
    dc.b  $01,$00,$01,$00,$01,$FF,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00
    dc.b  $01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00
    dc.b  $01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00
    dc.b  $01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00
    dc.b  $01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00
    dc.b  $01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00
    dc.b  $01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00
    dc.b  $01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00
    dc.b  $01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00
    dc.b  $01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00
    dc.b  $01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00
    dc.b  $01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00
    dc.b  $01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00
    dc.b  $01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00
    dc.b  $01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00
    dc.b  $01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00
    dc.b  $01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00
    dc.b  $01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00
    dc.b  $01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00
    dc.b  $01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00,$01,$00
    dc.b  $01,$00,$01,$00,$01,$00"""

def as_lists(s):
    s = re.sub("\s*;.*$","",s,flags=re.M)

    toks = [int(x.lstrip("$"),16) for x in re.split("[\s,]",s) if x and not x.startswith("dc")]
    # fix sign
    signed_toks = [x if x < 128 else x-256 for x in toks]
    toks_iter = iter(signed_toks)
    xlist =[]
    ylist = []
    try:
        while True:
            # proper coordinates (90 degree rotation)
            ylist.append(next(toks_iter))
            xlist.append(-next(toks_iter))
    except StopIteration:
        pass
    return xlist,ylist

def dump_list(lst,fp):
    with open(fp,"w") as f:
        for x in lst:
            f.write("{}\n".format(x))

xl,yl = as_lists(bomb_move_table)
dump_list(xl,"xbomb.txt")
dump_list(yl,"ybomb.txt")

xl,yl = as_lists(ufo_path)
dump_list(xl,"xufo.txt")
dump_list(yl,"yufo.txt")

